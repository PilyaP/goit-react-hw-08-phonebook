{"version":3,"file":"static/js/479.421bae49.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/pages/Contacts.js"],"sourcesContent":["import styled from '@emotion/styled';\n\n// export const Container = styled.div`\n//   display: flex;\n//   flex-direction: column;\n//   align-items: center;\n// `;\n\nexport const StyledForm = styled.form`\n  max-width: 500px;\n  margin: 0 auto;\n  padding: 16px;\n  background-color: #f5f5f5;\n  border-radius: 8px;\n  box-shadow: 0 3px 5px rgba(0, 0, 0, 0.2);\n\n  .form-title {\n    margin-top: 0;\n    font-size: 32px;\n    text-align: center;\n    \n      &:focus {\n        outline: none;\n        box-shadow: 0 0 5px #4285f4;\n      }\n    }\n  \n\n  .form-label {\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 16px;\n    font-size: 16px;\n  }\n  .form-btn {\n    padding: 8px;\n    font-size: 16px;\n    font-weight: 700;\n    color: #fff;\n    background-color: #4285f4;\n    border: none;\n    border-radius: 4px;\n    box-shadow: 0 3px 5px rgba(0, 0, 0, 0.2);\n    cursor: pointer;\n\n    &:hover {\n      background-color: #3367d6;\n    }\n\n    &:active {\n      background-color: #115293;\n    }\n  }\n\n  .form-span\n  {\n     margin-bottom: 8px;\n    font-weight: 700;\n  }\n  .form-input{\n    padding: 8px;\n    font-size: 16px;\n    border-radius: 4px;\n    border: none;\n    box-shadow: 0 3px 5px rgba(0, 0, 0, 0.2);\n  }\n`;\n\n","import React, { useState } from 'react';\nimport { StyledForm } from './ContactForm.styled';\nimport PropTypes from 'prop-types';\n\nconst ContactForm = ({ onSubmit, title }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');  \n  // const dispatch = useDispatch();\n  \n  const handleChange = event => {\n    const { name, value } = event.target;\n    if (name === 'name') {\n      setName(value);\n    } else if (name === 'number') {\n      setNumber(value);\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit({ name, number });\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <StyledForm onSubmit={handleSubmit}>\n      <h1 className=\"form-title\">{title}</h1>\n      <label className=\"form-label\">\n        <span className=\"form-span\">Name:</span>\n        <input\n          className=\"form-input\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <label className=\"form-label\">\n        <span className=\"form-span\">Number:</span>\n        <input\n          className=\"form-input\"\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <button type=\"submit\" className=\"form-btn\">\n        Add Contact\n      </button>\n    </StyledForm>\n  );\n};\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n};\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const ContactsItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px;\n  margin-bottom: 10px;\n  background-color: #fff;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2);\n  border-radius: 5px;\n  .contact-name {\n    font-weight: 700;\n    margin-right: 10px;\n    font-size: 14px;\n    color: #666;\n  }\n\n  .bnt-name {\n    width: 70px;\n    border: none;\n    cursor: pointer;\n    border-radius: 10px;\n    &:hover {\n      background-color: #3367d6;\n    }\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { ContactsItem } from './ContactList.styled';\n\nconst ContactList = ({ contacts, deleteContact }) => (\n  <ul>\n    {contacts.map(({ id, name, phone }) => {\n      return (\n        <ContactsItem key={id}>\n          <p className=\"contact-name\">\n            {name}: {phone}\n          </p>\n          <button\n            type=\"button\"\n            onClick={() => deleteContact(id)}\n            className=\"bnt-name\"\n          >\n            Delete\n          </button>\n        </ContactsItem>\n      );\n    })}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      phone: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nexport const FilterItem = styled.form`\n  .filter-label {\n    font-size: 16px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    margin-bottom: 10px;\n  }\n  .filter-input {\n    border-radius: 4px;\n    border: none;\n    box-shadow: 0 3px 5px rgba(0, 0, 0, 0.2);\n    width: 170px;\n    height: 25px;\n\n    padding: 0 15px;\n    border-radius: 4px;\n    border: 1px solid #ccc;\n    font-size: 16px;\n  }\n  .filter-input:focus {\n    outline: none;\n    \n  }\n \n\n  .filter-title {\n    margin-top: 0;\n    font-size: 26px;\n    text-align: center;\n    margin-top: 15px;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FilterItem } from './Filter.styled';\n// import { useDispatch, useSelector } from 'react-redux';\n// const Filter = ({ title }) => {\n//   const dispatch = useDispatch();\n//   const filter = useSelector(state => state.filter);\nconst Filter = ({ filter, changeFilterInput, title }) => (\n  //  return (\n  <FilterItem>\n    <h2 className=\"filter-title\">{title}</h2>\n    <div className=\"find-filter\">\n      <label className=\"filter-label\">Find contacts by name</label>\n      <input\n        className=\"filter-input\"\n        type=\"text\"\n        name=\"name\"\n        value={filter}\n        onChange={changeFilterInput}\n      />\n    </div>\n  </FilterItem>\n);\n\nFilter.propTypes = {\n  title: PropTypes.string.isRequired,\n  filter: PropTypes.string.isRequired,\n  changeFilterInput: PropTypes.func.isRequired,\n};\n// пропсы фильтр и changeFilterInput больше не передаются компоненту Filter?\nexport default Filter;\n","import { nanoid } from '@reduxjs/toolkit';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport Loader from 'components/Loader/Loader';\nimport { Notify } from 'notiflix';\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  addContactThunk,\n  deleteContactThunk,\n  fetchContacts,\n} from 'redux/contactOperations';\nimport { setFilter } from 'redux/filterSlice';\n\nexport default function Tasks() {\n  const contacts = useSelector(state => state.contacts.contacts);\n  const dispatch = useDispatch();\n  const isLoading = useSelector(state => state.contacts.isLoading);\n  const filter = useSelector(state => state.filter.filter);\n\n  const formSubmit = ({ name, phone }) => {\n    const contact = {\n      id: nanoid(),\n      name,\n      phone,\n    };\n\n    const isContactExist = contacts.some(\n      i =>\n        i.name.toLowerCase() === contact.name.toLowerCase() ||\n        i.phone === contact.phone\n    );\n\n    if (isContactExist) {\n      Notify.failure(`${name} is already in phonebook.`);\n    } else {\n      dispatch(addContactThunk(contact));\n    }\n  };\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const changeFilterInput = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  const findContacts = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  const handleContactDelete = id => {\n    const contactName = contacts.find(contact => contact.id === id).name;\n    dispatch(deleteContactThunk(id));\n    Notify.warning(`${contactName} deleted from phonebook.`);\n  };\n\n  return (\n    <>\n      <ContactForm onSubmit={formSubmit} title=\"Phonebook\" />\n      <Filter\n        filter={filter}\n        changeFilterInput={changeFilterInput}\n        title=\"Contacts\"\n      />\n      {isLoading && <Loader />}\n      <ContactList\n        contacts={findContacts()}\n        deleteContact={handleContactDelete}\n      />\n    </>\n  );\n}\n"],"names":["StyledForm","styled","onSubmit","title","useState","name","setName","number","setNumber","handleChange","event","target","value","preventDefault","className","type","pattern","required","onChange","ContactsItem","contacts","deleteContact","map","id","phone","onClick","FilterItem","filter","changeFilterInput","Tasks","useSelector","state","dispatch","useDispatch","isLoading","useEffect","fetchContacts","contact","nanoid","some","i","toLowerCase","Notify","addContactThunk","e","setFilter","Loader","includes","contactName","find","deleteContactThunk"],"sourceRoot":""}